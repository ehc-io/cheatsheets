# Create a key
gpg --gen-key

# To list a summary of all keys
gpg --list-keys

# To show your public key
gpg --armor --export

# To show the fingerprint for a key
gpg --fingerprint KEY_ID

# Search for keys
gpg --search-keys 'user@emailaddress.com'

# To Encrypt a File
gpg --encrypt --recipient 'user@emailaddress.com' example.txt

# To Decrypt a File
gpg --output example.txt --decrypt example.txt.gpg

# To Encrypt text
echo '<text>' | gpg --encrypt --armor --recipient "email@domain.com"

#Export keys (Where KEY_ID is the 8 character GPG key ID)
gpg --output ~/public_key.txt --armor --export KEY_ID

#Export keys (continued)
gpg --output ~/private_key.txt --armor --export-secret-key KEY_ID

# Import -  Retrieve the key files which you previously exported.
gpg --import ~/public_key.txt

# Import - (continued)
gpg --allow-secret-key-import --import ~/private_key.txt

# Create a revocation certificate.
gpg --output ~/revoke.asc --gen-revoke KEY_ID

# After creating the certificate import it
gpg --import ~/revoke.asca

# Then ensure that key servers know about the revokation.
gpg --send-keys KEY_ID

#Include a GPG signature file.
gpg -ba filename

# if you need to specify a particular key:
gpg --default-key <key ID> -ba filename

# To verify a downloaded file using its signature file.
gpg --verify filename.asc

# Import the public key or retrieve it from a server.
gpg --keyserver <keyserver> --recv-keys <Key_ID>

# Check its fingerprint against any previously stated value.
gpg --fingerprint <Key_ID>

# Sign the key
gpg --sign-key <Key_ID>

# Upload the signed key to a server.
gpg --keyserver <keyserver> --send-key <Key_ID>

# Change the email address associated with a GPG key
gpg --edit-key <key ID>

# then add
adduid

# Enter the new name and email address:
list

# If you want to delete a previous email address:
uid <list number>

# Then delete it with:
deluid

# To finish type:
save

# Publish the key to a server:
gpg --send-keys <key ID>

# Creating Subkeys
gpg --edit-key <key ID> (then add)

# To remove the master key, leaving only the subkey/s in place
gpg --export-secret-subkeys <subkey ID> > subkeys

# To remove the master key (cont.)
gpg --export <key ID> > pubkeys

# To remove the master key, l(cont.)
gpg --delete-secret-key <key ID>

# Import the keys back.
gpg --import pubkeys subkeys

# Verify the import.
gpg -K
